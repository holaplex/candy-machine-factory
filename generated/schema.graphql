### This file was generated by Nexus Schema
### Do not make changes to this file directly


"""Result from calling candy machine upload"""
type CandyMachineUploadResult {
  """Process id handle"""
  processId: String!
}

"""
This is the input of an encrypted message, using public-key authenticated encryption to Encrypt and decrypt messages between sender and receiver using elliptic curve Diffie-Hellman key exchange.
"""
input EncryptedMessage {
  """Base58 Encoded Box"""
  boxedMessage: String!

  """Base58 Encoded Client public key used to box the message"""
  clientPublicKey: String!

  """Base58 Encoded nonce used for boxing the message"""
  nonce: String!
}

"""The result for decrypting"""
type EncryptedMessageResult {
  """Decrypted message"""
  message: String!
}

"""The result for minting a NFT"""
type MintNftResult {
  """Mint hash of newly minted NFT"""
  message: String!
}

type Mutation {
  authenticatedMutation(encryptedMessage: EncryptedMessage!): EncryptedMessageResult
  candyMachineUpload(encryptedKeypair: EncryptedMessage!): CandyMachineUploadResult
  mintNft(encryptedMessage: EncryptedMessage!, nftMetadata: NftMetadata!): MintNftResult
}

input NftAttribute {
  """Name of the attribute"""
  trait_type: String

  """Value of the attribute"""
  value: String
}

input NftFile {
  """Whether the file is hosted on the CDN"""
  cdn: Boolean

  """Type of the file"""
  type: String

  """URI of the file"""
  uri: String
}

"""Metadata for a NFT"""
input NftMetadata {
  """Animation URL of the NFT"""
  animation_url: String!

  """Metadata for the NFT"""
  attributes: [NftAttribute]

  """Description of the NFT"""
  description: String!

  """External URL of the NFT"""
  external_url: String!

  """Image of the NFT"""
  image: String!

  """Name of the NFT"""
  name: String!

  """Properties of the NFT"""
  properties: NftProperties

  """Symbol of the NFT"""
  symbol: String!
}

input NftProperties {
  """Category of the NFT"""
  category: String

  """Files associated with the NFT"""
  files: [NftFile]
}

type Query {
  ok: Boolean!
}